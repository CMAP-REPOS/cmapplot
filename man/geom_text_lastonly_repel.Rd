% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_text_lastonly_repel.R
\name{geom_text_lastonly_repel}
\alias{geom_text_lastonly_repel}
\title{Text (Last Only) New}
\usage{
geom_text_lastonly_repel(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = NULL,
  parse = FALSE,
  box.padding = 0.25,
  point.padding = 1e-06,
  min.segment.length = 0.5,
  arrow = NULL,
  force = 1,
  force_pull = 1,
  max.time = 0.5,
  max.iter = 10000,
  max.overlaps = getOption("ggrepel.max.overlaps", default = 10),
  nudge_x = 0.4,
  nudge_y = 0,
  xlim = c(NA, NA),
  ylim = c(NA, NA),
  na.rm = FALSE,
  check_overlap = FALSE,
  direction = c("y", "x", "both"),
  seed = NA,
  verbose = FALSE,
  show.legend = FALSE,
  inherit.aes = TRUE,
  add_points = FALSE,
  text_aes = NULL,
  point_aes = NULL,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}} or
\code{\link[ggplot2]{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), is combined with the default mapping at the top level of the
plot. You only need to supply \code{mapping} if there isn't a mapping
defined for the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{parse}{If TRUE, the labels will be parsed into expressions and
displayed as described in ?plotmath}

\item{box.padding}{Amount of padding around bounding box, as unit or number.
Defaults to 0.25. (Default unit is lines, but other units can be specified
by passing \code{unit(x, "units")}).}

\item{point.padding}{Amount of padding around labeled point, as unit or
number. Defaults to 0. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{min.segment.length}{Skip drawing segments shorter than this, as unit or
number. Defaults to 0.5. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{arrow}{specification for arrow heads, as created by \code{\link[grid]{arrow}}}

\item{force}{Force of repulsion between overlapping text labels. Defaults
to 1.}

\item{force_pull}{Force of attraction between a text label and its
corresponding data point. Defaults to 1.}

\item{max.time}{Maximum number of seconds to try to resolve overlaps.
Defaults to 0.5.}

\item{max.iter}{Maximum number of iterations to try to resolve overlaps.
Defaults to 10000.}

\item{max.overlaps}{Exclude text labels when they overlap too many other
things. For each text label, we count how many other text labels or other
data points it overlaps, and exclude the text label if it has too many overlaps.
Defaults to 10.}

\item{nudge_x, nudge_y}{Horizontal and vertical adjustments to nudge the
starting position of each text label. The units for \code{nudge_x} and
\code{nudge_y} are the same as for the data units on the x-axis and y-axis.}

\item{xlim, ylim}{Limits for the x and y axes. Text labels will be constrained
to these limits. By default, text labels are constrained to the entire plot
area.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{direction}{"both", "x", or "y" -- direction in which to adjust position of labels}

\item{seed}{Random seed passed to \code{\link[base]{set.seed}}. Defaults to
\code{NA}, which means that \code{set.seed} will not be called.}

\item{verbose}{If \code{TRUE}, some diagnostics of the repel algorithm are printed}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2]{borders}}.}

\item{add_points}{If \code{TRUE}, points will be added to the plot (for the
labeled data only). Default size=2, color will match line color.}

\item{text_aes, point_aes}{Named list, additional aesthetics to send to the
text and point geoms, respectively.}

\item{...}{Additional aesthetics to send to BOTH the point and text geoms.
Note that if \code{add_points = FALSE}, additional parameters can be passed
to the text geom here, rather than in \code{text_aes}, without breaking.}
}
\description{
Label only the last point(s) on a plot. \code{geom_text_lastonly_repel()} can be
used instead of \code{ggplot2::geom_text()} when only the last point(s)
should be labeled. This is accomplished by identifying the maximum value of
\code{x} in \code{data} and applying a filter to omit records where \code{x}
is less than the maximum.
}
\details{
Labels are placed by default to the right of the final point, and may be
partially cut off by the plot limits. There are two known ways to address
this: \enumerate{ \item Turn off panel clipping, e.g. with
\code{coord_cartesian(clip = "off")}. Substitute the correct coordinate
system for your plot--all have a \code{clip} argument available. Note that
this will allow all geoms in the plot to draw outside the panel area, which
may have unintended consequences. \item Manually expand the \code{x} scale,
e.g. with \code{scale_x_continuous(expand=expand_scale(mult=0.10))} or
\code{coord_cartesian(xlim = c(min, max))}. }

Code was mostly copied from the source of \code{ggrepel::geom_text_repel()} and
\code{ggplot2::geom_point()}.
}
\examples{
library(tidyverse)

df <- transit_ridership \%>\%
 filter(system != "pace_ada") \%>\%
 mutate(system = recode_factor(system,
                              cta_bus = "CTA bus",
                              cta_rail = "CTA rail",
                               metra = "Metra",
                               pace = "Pace"))

# Without points, label formatting or x-axis expansion
ggplot(df, aes(x=year, y=value, color=var)) +
  geom_line() +
  labs(title="Random lines") +
  scale_y_continuous("Percentage of absolutely nothing") +
  scale_x_continuous("Year") +
  geom_text_lastonly()

# With points, label formatting and x-axis expansion
ggplot(df, aes(x=year, y=value, color=var, label=sprintf("\%.1f\%\%", 100*value))) +
  geom_line() +
  labs(title="Random lines") +
  scale_y_continuous("Percentage of absolutely nothing", labels=scales::percent) +
  scale_x_continuous("Year", expand=expansion(mult=c(0.05, 0.10))) +
  geom_text_lastonly(add_points=TRUE, text_aes=list(fontface="bold"), point_aes=list(size=2.5))

}
